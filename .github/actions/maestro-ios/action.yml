name: Maestro E2E iOS
description: Runs E2E Tests on iOS using Maestro
inputs:
  app-path:
    required: true
    description: The path to the .app file
  app-id:
    required: true
    description: The id of the app to test
  jsengine:
    required: true
    description: The js engine we are using
runs:
  using: composite
  steps:
    - name: Installing Maestro
      shell: bash
      run: curl -Ls "https://get.maestro.mobile.dev" | bash
    - name: Installing Maestro dependencies
      shell: bash
      run: |
        brew tap facebook/fb
        brew install facebook/fb/idb-companion jq
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Run tests
      id: run-tests
      shell: bash
      run: |
        echo "Launching iOS Simulator: iPhone 15 Pro"
        xcrun simctl boot "iPhone 15 Pro"
        sleep 30

        echo "Installing app on Simulator"
        xcrun simctl install booted "${{ inputs.app-path }}"

        echo "Retrieving device UDID"
        UDID=$(xcrun simctl list devices booted -j | jq '.devices | to_entries[] | select(.value[0] != null) | .value[0].udid')
        UDID=${UDID//\"/}
        echo "UDID is $UDID"

        echo "Bring simulator in foreground"
        open -a simulator

        echo "Start video record using pid: video_record_${{ inputs.jsengine }}.pid"
        xcrun simctl io booted recordVideo video_record.mov & echo $! > video_record_${{ inputs.jsengine }}.pid

        echo "Launch the app"
        xcrun simctl launch $UDID ${{ inputs.app-id }}

        echo "Running tests with Maestro"
        echo '$HOME/.maestro/bin/maestro --udid=$UDID test packages/rn-tester/.maestro/ --format junit -e APP_ID=${{ inputs.app-id }}'
        export MAESTRO_DRIVER_STARTUP_TIMEOUT=1200000 # 20 min. CI is extremely slow
        $HOME/.maestro/bin/maestro --udid=$UDID test packages/rn-tester/.maestro/ --format junit -e APP_ID=${{ inputs.app-id }} --debug-output /tmp/MaestroLogs
    - name: Stop video record
      if: always()
      shell: bash
      run: kill -SIGINT $(cat video_record_${{ inputs.jsengine }}.pid)
    - name: Store video record
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e_ios_report
        path: |
          video_record_${{ inputs.jsengine }}.mov
          report_${{ inputs.jsengine }}.xml
    - name: Store Logs
      if: failure() && steps.run-tests.outcome == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: maestro-logs-${{ inputs.jsengine }}
        path: /tmp/MaestroLogs
